#!/usr/bin/env ruby

require 'bundler/setup'
require 'seeing_is_believing'
require 'nu_plugin'

# :nodoc:
class SeeingIsBelievingCommand < NuPlugin::Command
  name 'sib'
  usage 'Shows Ruby code snippets with evaluated Ruby code per line in comments'

  def initialize
    @evaluated = ''
  end

  def sink(inputs)
    return '' if inputs.empty?

    @evaluated << "# Evaluated Ruby Code:\n"

    ruby_code = inputs.join
    ruby_code_lines = ruby_code.lines
    longest_line = max_len(ruby_code_lines)

    evaluate(ruby_code).each_with_index do |evaluated_code, line_number|
      @evaluated << format("%#{-1 * longest_line}s \#%s\n", ruby_code_lines[line_number].chomp, evaluated_code[0])
    end

    print format('%s', @evaluated)
  end

  private

  def max_len(ruby_code_line)
    ruby_code_line.reduce(0) do |max, line|
      size = line.size
      size > max ? size : max
    end
  end

  def evaluate(ruby_code)
    SeeingIsBelieving.call(ruby_code).result
  end
end

NuPlugin::JsonEntryPoint.run cmd: SeeingIsBelievingCommand
